services:
  main:
    in:
      type: number
    out:
      type: boolean

properties:
  val:
    type: number
  expr:
    type: string

operators:
  del2:
    operator: test_data.delegates.del2_op
    generics:
      gen:
        type: number
    properties:
      val: $val
  cmp:
    operator: slang.data.Evaluate
    properties:
      expression: $expr
      variables: ["a", "b"]

connections:
  (:
  - (del2
  del2.cmp):
  - (cmp
  cmp):
  - (del2.cmp
  del2):
  - )

tests:
  - name: Test1
    properties:
      val: 5  # b
      expr: a <= b
    data:
      in:  # a
        - 1
        - 10
        - 5
      out:
        - true
        - false
        - true
  - name: Test2
    properties:
      val: 1  # b
      expr: a % 2 == b
    data:
      in:  # a
        - 3
        - 7
        - 4
      out:
        - true
        - true
        - false
  - name: Test3
    properties:
      val: 12  # b
      expr: a == b
    data:
      in:  # a
        - 1
        - 12
        - 5
      out:
        - false
        - true
        - false
